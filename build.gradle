plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id "com.diffplug.spotless" version "6.25.0"
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" // Check for the latest version

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    // Define the main class for the application.
    manifest {
        attributes(
                "Main-Class": "Launcher"
        )
    }
}

spotless {
    java {
        // Use the default importOrder configuration
        importOrder()
        // optional: instead of specifying import groups directly you can specify a config file
        // export config file: https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md#creating-spotlessimportorder

        removeUnusedImports()

        // Cleanthat will refactor your code, but it may break your style: apply it before your formatter
        cleanthat()          // has its own section below

        // Choose one of these formatters.
        googleJavaFormat().aosp()   // has its own section below

        formatAnnotations()  // fixes formatting of type annotations, see below

        //licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
    }
}

tasks.register("run", JavaExec) {
    mainClass = "Launcher"
    classpath = sourceSets.main.runtimeClasspath
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}